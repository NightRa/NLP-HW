import genetic.nlp._
import Communication._
import genetic.util._
val s = startSession()
val bitset = new BitSet(161)
s.write("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111")
s.output.nextDouble

50 features:
01001010101000110000000100000000000000010100001000000001110101100000110011001010001110000000000100000101010001000100000100100010000001010111100001000111111000110
Fitness = 0.7665

01111010100000101000000000100100000000010000000000001101001100001100100010001000100100001010000100001000010001000010001001010000001001000111101011010101101000011
Fitness = 0.7710

00001100101100100100001000011000000010000000000000001001010100001001100011101011000011000001000100000001100101010001001010100000111000010001000100100100001001110
Fitness = 0.7865

00000100110110100000000100001000000000000000000000101001100100000011001010101000000010000110100010101000101010010000010011010001110000011010100000011101011001000
Fitness = 0.7960

All data = 0.8075

With shuffling:
00010101110110100001000000000001000010100010000001000001100110001011000000101000000000000110100000111000010110000010000000010101000001001001100000000101011000000
Fitness = 0.8045

00010101110110100001000000000001000010100010000001000001100110001011000000101000000000000110000000111000010110000010000000010101000001001001110000000101011000000
Fitness = 0.8010

00000101110111100001010000000001000010100010000001000001100110001011000001101000000000000110100000111000100110000010000000010001000001001001100000000100011000010
Fitness = 0.7980

10 features:
00000000100100001000000000000011000000000000000000000001000000000000000000001000000010000000000000000000000000000000000000000000000000000000010000000000001000000
Fitness = 0.7075

00010000100100000000000000000011000000000000000000000001000000000000000000001000000010000000000000000000000000000000000000000000000000000000010000000000001000000
Fitness = 0.7070

With Shuffling:
00000001110000000000000000000000000000000000000000000001000000000000000000001000000000000000000000001100000000000000000000000000010000000000000000000100010000000
Fitness = 0.721

00000001100010000000000000000000000000000000000000000001000000000000000000001000000000000000000000001100000000000000000000000000010000000000000000000100010000000
Fitness = 0.72

20 Features:
00000101100100100000001000000001001010000000000000001001000000000000000000001000000000000000000000000100000100000000000000000001010000000001000000000100010000000
Fitness = 0.7825

00000101100100100000001000000001001010000000000000001001000000000000000000001000000010000000000000000100000000000000000000100001010000000001000000000100010000000
Fitness = 0.782

15 Features:
00000100100100100000000000000100000010000000000000000001000000000000000000001000000000000000000000001100000000000000010000000000010000000000000000000100011000000
Fitness = 0.7605

30 Features:
00000101110100100011000000000000000010000010000000010011110000001000000000001000000000000000001100001000100000000000000000000001010000100010000000010100011010000
Fitness = 0.786

00000001110100100010000000000000000010000010000000010011110000001000000000001000000000000000001100001000100100000000000000000001010000100010000000010100011010000
Fitness = 0.7855

SVM 10 Features:
00000000100000100000100000000000000000000000000000000000010000000000000000001000000010000000000000000000000000000000000000000000000000000001000000000100001000000
Fitness = 0.711

00000000100000100000000000000000000000000000000000000000010000000000000000001000000010000000000000000000000000000100000000000000000000000001000000000100001000000
Fitness = 0.7125

Best (8): Params: (ints: (Population Size ->   4), doubles: (Elitism Rate -> 0.296, Gene Similarity Threshold -> 0.913, Local Optimum: Elitism Rate -> 0.721, Local Optimum: Hyper Mutation Rate -> 0.713, Local Optimum: Immigrants Rate -> 0.526, Local Optimum: Top Ratio -> 0.146, Mutation Rate -> 0.105, Top Ratio -> 0.196)); local optimum: true, fitness: 0.6641; meaningful: 0.6641, time: 6474 ms; avg: 0.671; stdDev: 0.005
